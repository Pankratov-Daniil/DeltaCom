<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.14.5.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="com.deltacom.app"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="jdbc:h2:mem:PUBLIC;MODE=mysql;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1" />
        <property name="driverClassName" value="org.h2.Driver" />
    </bean>

    <bean id="flyway" class="org.flywaydb.core.Flyway" depends-on="dataSource" init-method="migrate">
        <property name="dataSource" ref="dataSource"/>
        <property name="schemas" value="PUBLIC"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="flyway">
        <property name="persistenceUnitName" value="DeltaCom-test" />
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence-test.xml" />
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" depends-on="flyway">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
        <property name="favorParameter" value="true" />
        <property name="mediaTypes">
            <value>
                json=application/json
            </value>
        </property>
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" depends-on="flyway">
        <constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </bean>

    <bean id="messageSenderService" class="com.deltacom.app.services.implementation.MessageSenderServiceImpl"
          factory-method="aspectOf"/>

    <!-- Creating ActiveMQ broker -->
    <amq:broker useJmx="false" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:0" />
        </amq:transportConnectors>
    </amq:broker>
    <amq:connectionFactory id="connectionFactory" brokerURL="vm://localhost"/>
    <!--<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616"/>-->
    <bean id="cachingBrokerConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="connectionFactory"/>
        <property name="sessionCacheSize" value="10"/>
    </bean>
    <!-- A destination in ActiveMQ -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg index="0" value="DeltaCom.topic" />
    </bean>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingBrokerConnectionFactory" />
        <property name="defaultDestination" ref="destination"/>
        <property name="pubSubDomain" value="true"/>
    </bean>
</beans>